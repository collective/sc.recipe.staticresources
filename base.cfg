[buildout]
show-picked-versions = true
extensions =
    mr.developer

parts =
    test
    code-analysis
    coverage
    test-coverage
    createcoverage
    releaser
    pylint
    omelette

develop = .


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/sc
return-status-codes = True


[omelette]
recipe = collective.recipe.omelette
eggs = ${test:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:eggs}
initialization =
    os.environ['TZ'] = 'UTC'
defaults = ['-s', 'sc.recipe.staticresources', '--auto-color', '--auto-progress']


[coverage]
recipe = zc.recipe.egg
eggs = coverage


[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[pylint]
recipe = zc.recipe.egg
eggs = pylint < 2.0


[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs = sc.recipe.staticresources [test]


[versions]
# Don't use a released version of sc.recipe.staticresources
sc.recipe.staticresources =

lazy-object-proxy = 1.6.0
